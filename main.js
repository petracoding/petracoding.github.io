/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./css/main.scss":
/*!***********************!*\
  !*** ./css/main.scss ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var api = __webpack_require__(/*! ../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js!./main.scss */ \"./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./css/main.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.i, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};\n\n//# sourceURL=webpack:///./css/main.scss?");

/***/ }),

/***/ "./js/main.js":
/*!********************!*\
  !*** ./js/main.js ***!
  \********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _css_main_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../css/main.scss */ \"./css/main.scss\");\n/* harmony import */ var _css_main_scss__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_main_scss__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _pages_tumblr_tag_list_tool__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pages/tumblr-tag-list-tool */ \"./js/pages/tumblr-tag-list-tool.js\");\n/* harmony import */ var _pages_tumblr_tag_list_tool__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_pages_tumblr_tag_list_tool__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _pages_notion_widgets__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pages/notion-widgets */ \"./js/pages/notion-widgets.js\");\n/* harmony import */ var _pages_notion_widgets__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_pages_notion_widgets__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _pages_pinterest_board__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/pinterest-board */ \"./js/pages/pinterest-board.js\");\n/* harmony import */ var _pages_pinterest_board__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_pages_pinterest_board__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _pages_vocabulary_manager__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pages/vocabulary-manager */ \"./js/pages/vocabulary-manager.js\");\n/* harmony import */ var _pages_vocabulary_manager__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_pages_vocabulary_manager__WEBPACK_IMPORTED_MODULE_4__);\n\r\n\r\n\r\n\r\n\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function (event) {\r\n  //do work\r\n});\r\n\n\n//# sourceURL=webpack:///./js/main.js?");

/***/ }),

/***/ "./js/pages/notion-widgets.js":
/*!************************************!*\
  !*** ./js/pages/notion-widgets.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("const isLocal = window.location.hostname == \"localhost\";\r\nconst urlBase = isLocal ? \"http://localhost:52330/notion/\" : \"https://petracoding.github.io/notion/\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n  if (document.querySelector(\".notion-widgets\")) {\r\n    doText();\r\n    const textOptionElements = document.querySelector(\"#text\").querySelectorAll(\"input, select\");\r\n    [...textOptionElements].forEach((e) => e.addEventListener(\"input\", doText));\r\n  }\r\n\r\n  function doText() {\r\n    const container = document.querySelector(\"#text\");\r\n    let url = urlBase + \"text.html\";\r\n    const mode = container.querySelector('[name=\"text-mode\"]:checked').value;\r\n    url += \"?mode=\" + mode;\r\n    const centered = container.querySelector(\"#text-centered\").checked;\r\n    url += \"&centered=\" + (centered ? \"1\" : \"0\");\r\n    const size = container.querySelector(\"#text-size\").value;\r\n    url += \"&size=\" + size;\r\n    const fullWidth = container.querySelector(\"#text-fullWidth\").checked;\r\n    url += \"&fullWidth=\" + (fullWidth ? \"1\" : \"0\");\r\n    const bold = container.querySelector(\"#text-bold\").checked;\r\n    url += \"&bold=\" + (bold ? \"1\" : \"0\");\r\n    const italic = container.querySelector(\"#text-italic\").checked;\r\n    url += \"&italic=\" + (italic ? \"1\" : \"0\");\r\n    const underline = container.querySelector(\"#text-underline\").checked;\r\n    url += \"&underline=\" + (underline ? \"1\" : \"0\");\r\n    const color = container.querySelector(\"#text-color\").value.replace(\"#\", \"\");\r\n    url += \"&color=\" + color;\r\n    if (container.querySelector(\"#text-bg\").checked) {\r\n      container.querySelector(\".only-show-if-bg-color\").style.visibility = \"visible\";\r\n      container.querySelector(\".only-show-if-bg-color\").style.height = \"auto\";\r\n      const background = container.querySelector(\"#text-background\").value.replace(\"#\", \"\");\r\n      url += \"&background=\" + background;\r\n      const corners = container.querySelector(\"#text-corners\").value;\r\n      url += \"&corners=\" + corners;\r\n    } else {\r\n      container.querySelector(\".only-show-if-bg-color\").style.visibility = \"hidden\";\r\n      container.querySelector(\".only-show-if-bg-color\").style.height = \"1px\";\r\n    }\r\n    const font = container.querySelector(\"#text-font\").value;\r\n    url += \"&font=\" + font;\r\n    const text = container.querySelector(\"#text-text\").value;\r\n    url += \"&text=\" + encodeURIComponent(text).replaceAll(\"%20\", \"ยง\");\r\n    container.querySelector(\".output\").value = url;\r\n    container.querySelector(\"iframe\").setAttribute(\"src\", url);\r\n  }\r\n\r\n  // WIDGETS THEMSELVES:\r\n\r\n  // TEXT\r\n  if (document.querySelector(\"#notion-widget-text\")) {\r\n    const background = findGetParameter(\"background\");\r\n    const centered = findGetParameter(\"centered\");\r\n    const color = findGetParameter(\"color\");\r\n    const corners = findGetParameter(\"corners\");\r\n    const font = findGetParameter(\"font\");\r\n    const fullWidth = findGetParameter(\"fullWidth\");\r\n    const mode = findGetParameter(\"mode\");\r\n    const size = findGetParameter(\"size\");\r\n    const text = findGetParameter(\"text\");\r\n    const bold = findGetParameter(\"bold\");\r\n    const italic = findGetParameter(\"italic\");\r\n    const underline = findGetParameter(\"underline\");\r\n\r\n    if (mode == \"dark\") document.body.classList.add(\"dark-mode\");\r\n\r\n    const textEl = this.querySelector(\"#text\");\r\n\r\n    if (centered == \"1\") {\r\n      textEl.closest(\"div:not(#text)\").classList.add(\"centered\");\r\n    }\r\n    if (size) textEl.style.fontSize = size + \"px\";\r\n    if (font) textEl.style.fontFamily = font;\r\n    if (color) textEl.style.color = \"#\" + color;\r\n    if (corners) textEl.style.borderRadius = corners + \"px\";\r\n    if (fullWidth == \"1\") textEl.style.width = \"100%\";\r\n    if (bold == \"1\") textEl.style.fontWeight = \"bold\";\r\n    if (italic == \"1\") textEl.style.fontStyle = \"italic\";\r\n    if (underline == \"1\") textEl.style.textDecoration = \"underline\";\r\n    if (background) {\r\n      textEl.style.backgroundColor = \"#\" + background;\r\n      textEl.style.padding = \"0 0.5em\";\r\n    }\r\n\r\n    textEl.innerHTML = decodeURIComponent(text.replaceAll(\"ยง\", \"%20\"));\r\n  }\r\n});\r\n\r\nfunction findGetParameter(parameterName) {\r\n  var result = null,\r\n    tmp = [];\r\n  location.search\r\n    .substr(1)\r\n    .split(\"&\")\r\n    .forEach(function (item) {\r\n      tmp = item.split(\"=\");\r\n      if (tmp[0] === parameterName) result = decodeURIComponent(tmp[1]);\r\n    });\r\n  return result;\r\n}\r\n\n\n//# sourceURL=webpack:///./js/pages/notion-widgets.js?");

/***/ }),

/***/ "./js/pages/pinterest-board.js":
/*!*************************************!*\
  !*** ./js/pages/pinterest-board.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("const isLocal = window.location.hostname == \"localhost\";\r\nconst urlBase = isLocal ? \"http://localhost:52330/pinterest/board.html\" : \"https://petracoding.github.io/pinterest/board.html\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n  if (document.querySelector(\".pinterest-board\")) {\r\n    buildURL();\r\n    document.querySelector(\"#your-link\").addEventListener(\"input\", buildURL);\r\n    document.querySelector(\"#hide-header\").addEventListener(\"input\", buildURL);\r\n    document.querySelector(\"#transparent-bg\").addEventListener(\"input\", buildURL);\r\n  }\r\n});\r\n\r\nfunction buildURL() {\r\n  let url = urlBase;\r\n  const link = document.querySelector(\"#your-link\").value;\r\n  if (!link) {\r\n    document.querySelector(\".output\").value = \"\";\r\n    document.querySelector(\".outputNotion\").value = \"\";\r\n    document.querySelector(\"iframe\").setAttribute(\"src\", \"\");\r\n  } else {\r\n    url += \"?link=\" + cleanPinterestUrl(link);\r\n    const hideHeader = document.querySelector(\"#hide-header\").checked;\r\n    url += \"&hideHeader=\" + (hideHeader ? \"1\" : \"0\");\r\n    const transparent = document.querySelector(\"#transparent-bg\").checked;\r\n    url += \"&transparent=\" + (transparent ? \"1\" : \"0\");\r\n    document.querySelector(\"iframe\").setAttribute(\"src\", url);\r\n\r\n    const output = `<iframe src=\"${url}\"></iframe>`;\r\n    document.querySelector(\".output\").value = output;\r\n    document.querySelector(\".outputNotion\").value = url;\r\n  }\r\n}\r\n\r\nfunction cleanPinterestUrl(link) {\r\n  const i = getPosition(link, \"/\", 3);\r\n  return link.substr(i).substr(1);\r\n}\r\n\r\nfunction getPosition(string, subString, index) {\r\n  return string.split(subString, index).join(subString).length;\r\n}\r\n\n\n//# sourceURL=webpack:///./js/pages/pinterest-board.js?");

/***/ }),

/***/ "./js/pages/tumblr-tag-list-tool.js":
/*!******************************************!*\
  !*** ./js/pages/tumblr-tag-list-tool.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("document.addEventListener(\"DOMContentLoaded\", function (event) {\r\n  if (document.querySelector(\".tumblr-tag-list-tool\")) {\r\n    const eachTagInNewLineCheckbox = document.querySelector(\"#eachTagInNewLine\");\r\n    const separatorWrapEl = document.querySelector(\".separator-wrap\");\r\n    const groupTagsCheckbox = document.querySelector(\"#groupTags\");\r\n    const groupTagsWrapEl = document.querySelector(\".group-tags-wrap\");\r\n\r\n    prepare();\r\n    eachTagInNewLineCheckbox.addEventListener(\"change\", prepare);\r\n    groupTagsCheckbox.addEventListener(\"change\", prepare);\r\n\r\n    function prepare() {\r\n      if (eachTagInNewLineCheckbox.checked) {\r\n        separatorWrapEl.style.display = \"none\";\r\n      } else {\r\n        separatorWrapEl.style.display = \"block\";\r\n      }\r\n      if (groupTagsCheckbox.checked) {\r\n        groupTagsWrapEl.style.display = \"block\";\r\n      } else {\r\n        groupTagsWrapEl.style.display = \"none\";\r\n      }\r\n    }\r\n\r\n    document.querySelector(\"#go\").addEventListener(\"click\", () => {\r\n      const outputEl = document.querySelector(\"#output\");\r\n      const input = document.querySelector(\"textarea\").value;\r\n      const addHashtags = document.querySelector(\"#addHashtags\").checked;\r\n      const useSearch = document.querySelector(\"#useSearch\").checked;\r\n      const eachTagInNewLine = eachTagInNewLineCheckbox.checked;\r\n      const groupTags = groupTagsCheckbox.checked;\r\n      const useHeadings = groupTags && document.querySelector(\"#headings\").checked;\r\n      const url = document.querySelector(\"#url\").value;\r\n      const separator = document.querySelector(\"#separator\").value || \"\";\r\n      let o = \"\";\r\n      let isHeading = false;\r\n      let isFirstGroup = true;\r\n\r\n      const groups = groupTags ? input.split(/\\n\\n/) : [input];\r\n\r\n      groups.forEach((group) => {\r\n        const tags = group.split(/[\\n,#]+/);\r\n        isHeading = useHeadings;\r\n        if (groupTags && !isFirstGroup) {\r\n          o += \"<br/>\";\r\n        }\r\n        tags.forEach((tag) => {\r\n          tag = tag.trim();\r\n          if (tag !== \",\" && tag !== \"\") {\r\n            if (isHeading) {\r\n              o += tag + \"<br/>\";\r\n              isHeading = false;\r\n            } else {\r\n              const tagSafeForString = tag;\r\n              o +=\r\n                \"<a href='https://\" +\r\n                (url ? url + \".\" : \"\") +\r\n                \"tumblr.com\" +\r\n                (useSearch ? \"/search/\" : \"/tagged/\") +\r\n                tagSafeForString +\r\n                \"'>\" +\r\n                (addHashtags ? \"#\" : \"\") +\r\n                tag +\r\n                \"</a>\" +\r\n                (eachTagInNewLine ? \"<br/>\" : separator);\r\n            }\r\n          }\r\n        });\r\n        isFirstGroup = false;\r\n      });\r\n\r\n      outputEl.innerHTML = o;\r\n    });\r\n  }\r\n});\r\n\n\n//# sourceURL=webpack:///./js/pages/tumblr-tag-list-tool.js?");

/***/ }),

/***/ "./js/pages/vocabulary-manager.js":
/*!****************************************!*\
  !*** ./js/pages/vocabulary-manager.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("document.addEventListener(\"DOMContentLoaded\", function () {\r\n  if (!document.querySelector(\".vocabulary-manager\")) return;\r\n\r\n  const removeDuplicatesCheckbox = document.querySelector(\"#removeDuplicates\");\r\n  const maxWordsCheckbox = document.querySelector(\"#maxWords\");\r\n\r\n  prepare();\r\n  removeDuplicatesCheckbox.addEventListener(\"change\", prepare);\r\n  maxWordsCheckbox.addEventListener(\"change\", prepare);\r\n\r\n  function prepare() {\r\n    document.querySelector(\".wrap-removeDuplicates\").style.display = removeDuplicatesCheckbox.checked ? \"block\" : \"none\";\r\n    document.querySelector(\".wrap-maxWords\").style.display = maxWordsCheckbox.checked ? \"block\" : \"none\";\r\n  }\r\n\r\n  document.querySelector(\"#go\").addEventListener(\"click\", () => {\r\n    let o;\r\n    const input = document.querySelector(\"textarea\").value;\r\n    const separator = document.querySelector(\"#separator\").value || \"<br>\";\r\n\r\n    const words = input.trim().split(/[\\n,]+/);\r\n    const changedWords = changeArray(words);\r\n\r\n    const sort = document.querySelector(\"#sort\").checked;\r\n    if (sort) changedWords.sort();\r\n\r\n    const beforeNumber = words.length;\r\n    const number = changedWords.length;\r\n    const removedNumber = beforeNumber - number;\r\n    document.querySelector(\"#outputNumber\").innerHTML = number;\r\n    document.querySelector(\"#outputRemovedNumber\").innerHTML = removedNumber;\r\n    document.querySelector(\"#outputLists\").innerHTML = \"1\";\r\n\r\n    const maxWords = document.querySelector(\"#maxWords\").checked;\r\n\r\n    if (maxWords) {\r\n      const chunkify = function* (itr, size) {\r\n        let chunk = [];\r\n        for (const v of itr) {\r\n          chunk.push(v);\r\n          if (chunk.length === size) {\r\n            yield chunk;\r\n            chunk = [];\r\n          }\r\n        }\r\n        if (chunk.length) yield chunk;\r\n      };\r\n\r\n      const maxWordsN = document.querySelector(\"#maxWordsN\").value || 20;\r\n      const randomizeOrder = document.querySelector(\"#randomizeOrder\").checked;\r\n      if (randomizeOrder) shuffleArray(changedWords);\r\n\r\n      const chunkedLists = [...chunkify(changedWords, parseInt(maxWordsN))];\r\n      o = \"\";\r\n      [...chunkedLists].forEach((list) => {\r\n        if (sort && randomizeOrder) list.sort();\r\n        o += list.join(separator);\r\n        o += \"<hr>\";\r\n      });\r\n      document.querySelector(\"#outputLists\").innerHTML = chunkedLists.length;\r\n    } else {\r\n      o = changedWords.join(separator);\r\n    }\r\n\r\n    document.querySelector(\"#output\").innerHTML = o;\r\n  });\r\n});\r\n\r\nfunction changeArray(words) {\r\n  const lowercase = document.querySelector(\"#lowercase\").checked;\r\n  const removePuncuation = document.querySelector(\"#removePuncuation\").checked;\r\n  const removeDuplicates = document.querySelector(\"#removeDuplicates\").checked;\r\n  const removeAdverbDuplicates = document.querySelector(\"#removeAdverbDuplicates\").checked;\r\n  const removePluralDuplicates = document.querySelector(\"#removePluralDuplicates\").checked;\r\n  const changedWords = [],\r\n    duplicateWords = [];\r\n\r\n  words.forEach((word) => {\r\n    let changedWord = word.trim();\r\n    if (lowercase) changedWord = changedWord.toLowerCase();\r\n\r\n    if (removePuncuation) {\r\n      changedWord = changedWord\r\n        .replaceAll(\",\", \"\")\r\n        .replaceAll(\";\", \"\")\r\n        .replaceAll(\":\", \"\")\r\n        .replaceAll(\".\", \"\")\r\n        .replaceAll(\"!\", \"\")\r\n        .replaceAll(\"?\", \"\")\r\n        .replaceAll(\"'\", \"\")\r\n        .replaceAll('\"', \"\")\r\n        .replaceAll(\"โ\", \"\")\r\n        .replaceAll(\"โ\", \"\");\r\n    }\r\n\r\n    let isDuplicate = false;\r\n    if (removeDuplicates) {\r\n      if (changedWords.includes(changedWord)) isDuplicate = true;\r\n\r\n      if (removeAdverbDuplicates) {\r\n        if (changedWords.includes(changedWord.replace(/ly$/, \"\"))) isDuplicate = true;\r\n        if (changedWords.includes(changedWord.replace(/ily$/, \"y\"))) isDuplicate = true;\r\n      }\r\n\r\n      if (removePluralDuplicates) {\r\n        if (changedWords.includes(changedWord.replace(/s$/, \"\"))) isDuplicate = true;\r\n        if (changedWords.includes(changedWord.replace(/es$/, \"\"))) isDuplicate = true;\r\n        if (changedWords.includes(changedWord.replace(/es$/, \"e\"))) isDuplicate = true;\r\n      }\r\n    }\r\n\r\n    if (!isDuplicate) {\r\n      changedWords.push(changedWord);\r\n    } else {\r\n      duplicateWords.push(changedWord);\r\n    }\r\n  });\r\n\r\n  console.log(\"Removed Duplicate Words:\");\r\n  console.log(duplicateWords);\r\n\r\n  return changedWords;\r\n}\r\n\r\nfunction shuffleArray(array) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack:///./js/pages/vocabulary-manager.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./css/main.scss":
/*!****************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./css/main.scss ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Imports\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.i, \".tumblr-tag-list-tool span {\\n  display: block;\\n  margin-top: 30px; }\\n\\n.tumblr-tag-list-tool label {\\n  width: 100%;\\n  display: block;\\n  margin-top: 10px; }\\n\\n.tumblr-tag-list-tool #output {\\n  padding: 10px;\\n  border: 2px solid lightgray;\\n  max-height: 85vh;\\n  overflow-y: auto; }\\n  .tumblr-tag-list-tool #output:empty {\\n    display: none; }\\n\\n.tumblr-tag-list-tool .wrap {\\n  margin-left: 30px;\\n  margin-bottom: 20px; }\\n\\n.notion-widgets button,\\n.notion-widgets input[type=\\\"text\\\"],\\n.notion-widgets input[type=\\\"number\\\"],\\n.notion-widgets input[type=\\\"color\\\"],\\n.notion-widgets textarea,\\n.notion-widgets select {\\n  font-family: \\\"Mukta\\\", sans-serif;\\n  font-size: 16px;\\n  line-height: 1.75;\\n  background: #eee4e4;\\n  border: 1px solid #898989;\\n  padding: 5px 15px;\\n  margin-bottom: 0.5em; }\\n  @media (min-width: 1000px) {\\n    .notion-widgets button,\\n    .notion-widgets input[type=\\\"text\\\"],\\n    .notion-widgets input[type=\\\"number\\\"],\\n    .notion-widgets input[type=\\\"color\\\"],\\n    .notion-widgets textarea,\\n    .notion-widgets select {\\n      font-size: 22px; } }\\n  .notion-widgets button:focus,\\n  .notion-widgets input[type=\\\"text\\\"]:focus,\\n  .notion-widgets input[type=\\\"number\\\"]:focus,\\n  .notion-widgets input[type=\\\"color\\\"]:focus,\\n  .notion-widgets textarea:focus,\\n  .notion-widgets select:focus {\\n    outline: none;\\n    border: 1px solid black; }\\n\\n.notion-widgets input[type=\\\"text\\\"] {\\n  margin-top: 10px;\\n  width: 100%; }\\n\\n.notion-widgets textarea {\\n  width: 100%;\\n  min-height: 150px; }\\n\\n.notion-widgets h1:not(:first-child) {\\n  margin-top: 10vh; }\\n\\n.notion-widgets h2 {\\n  margin-top: 0;\\n  margin-bottom: 0.5em; }\\n\\n.notion-widgets span {\\n  display: block; }\\n\\n.notion-widgets label {\\n  width: 100%;\\n  display: block; }\\n\\n.notion-widgets input[type=\\\"radio\\\"],\\n.notion-widgets input[type=\\\"checkbox\\\"] {\\n  filter: saturate(0) brightness(0.9); }\\n\\n.notion-widgets #output {\\n  padding: 10px;\\n  border: 2px solid lightgray;\\n  max-height: 85vh;\\n  overflow-y: auto; }\\n  .notion-widgets #output:empty {\\n    display: none; }\\n\\n.notion-widgets .wrap {\\n  margin-left: 30px;\\n  margin-bottom: 20px; }\\n\\n.notion-widgets iframe {\\n  width: 100%;\\n  border: 1px solid #898989;\\n  margin-bottom: 1em; }\\n\\n.notion-widgets section {\\n  display: flex;\\n  gap: 30px; }\\n  .notion-widgets section > * {\\n    flex: 0 0 50%; }\\n\\n.notion-widgets .output {\\n  font-size: 0.85em; }\\n\\n@media (prefers-color-scheme: dark) {\\n  .notion-widgets input[type=\\\"text\\\"],\\n  .notion-widgets input[type=\\\"number\\\"],\\n  .notion-widgets input[type=\\\"color\\\"],\\n  .notion-widgets textarea,\\n  .notion-widgets button,\\n  .notion-widgets select {\\n    color: #bebcc3;\\n    background: #2a2a2c;\\n    border-color: #2a2a2c; }\\n    .notion-widgets input[type=\\\"text\\\"]:focus,\\n    .notion-widgets input[type=\\\"number\\\"]:focus,\\n    .notion-widgets input[type=\\\"color\\\"]:focus,\\n    .notion-widgets textarea:focus,\\n    .notion-widgets button:focus,\\n    .notion-widgets select:focus {\\n      border-color: #f4ecec; }\\n  .notion-widgets input[type=\\\"checkbox\\\"] {\\n    filter: invert(1) saturate(0); }\\n  .notion-widgets button:hover, .notion-widgets button:focus {\\n    filter: brightness(0.8); }\\n  .notion-widgets iframe {\\n    border: 2px solid white; } }\\n\\n.notion-widget {\\n  position: relative;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 100%;\\n  overflow: hidden;\\n  background-color: white !important; }\\n  .notion-widget.dark-mode {\\n    background-color: #191919 !important; }\\n  .notion-widget > * {\\n    width: 100%; }\\n    .notion-widget > *.centered {\\n      display: flex;\\n      justify-content: center; }\\n      .notion-widget > *.centered #text {\\n        text-align: center; }\\n  .notion-widget #text {\\n    display: inline-block;\\n    letter-spacing: 0; }\\n\\n@media (prefers-color-scheme: dark) {\\n  .notion-widget {\\n    background-color: white !important; }\\n    .notion-widget.dark-mode {\\n      background-color: #191919 !important; } }\\n\\n.pinterest-board h1:not(:first-child) {\\n  margin-top: 10vh; }\\n\\n.pinterest-board h2 {\\n  font-size: 2em;\\n  margin-top: 0;\\n  margin-bottom: 0; }\\n\\n.pinterest-board span {\\n  display: block; }\\n\\n.pinterest-board label {\\n  width: 100%;\\n  display: block; }\\n\\n.pinterest-board #output {\\n  padding: 10px;\\n  border: 2px solid lightgray;\\n  max-height: 85vh;\\n  overflow-y: auto; }\\n  .pinterest-board #output:empty {\\n    display: none; }\\n\\n.pinterest-board .wrap {\\n  margin-left: 30px;\\n  margin-bottom: 20px; }\\n\\n.pinterest-board iframe {\\n  width: 100%;\\n  border: 1px solid #898989;\\n  margin-bottom: 1em;\\n  height: 500px; }\\n\\n.pinterest-board .output,\\n.pinterest-board .outputNotion {\\n  font-size: 0.85em;\\n  min-height: 2em; }\\n  @media (max-width: 900px) {\\n    .pinterest-board .output,\\n    .pinterest-board .outputNotion {\\n      min-height: 6em; } }\\n\\n@media (prefers-color-scheme: dark) {\\n  .pinterest-board iframe {\\n    border: 2px solid white; } }\\n\\n@font-face {\\n  font-family: \\\"basiic\\\";\\n  src: url(https://cinni.net/fonts/basiic.ttf); }\\n\\n* {\\n  box-sizing: border-box;\\n  color: #251d35; }\\n\\nbody {\\n  font-family: \\\"basiic\\\", \\\"Mukta\\\", sans-serif;\\n  letter-spacing: -0.03em;\\n  font-size: 17px;\\n  line-height: 1.8;\\n  display: flex;\\n  justify-content: center;\\n  background: #f8f2f2; }\\n  @media (min-width: 1000px) {\\n    body {\\n      font-size: 19px;\\n      line-height: 1.5; } }\\n\\na,\\na small, a:visited,\\na:visited small {\\n  color: #1d5999; }\\n\\na:hover,\\na:hover small, a:focus,\\na:focus small {\\n  color: #003166;\\n  text-decoration-style: wavy; }\\n\\nmain {\\n  width: 95%;\\n  max-width: 850px; }\\n  @media (min-width: 1000px) {\\n    main {\\n      width: 90%;\\n      padding-top: 10vh;\\n      padding-bottom: 10vh; } }\\n\\np {\\n  margin: 0.5em 0;\\n  text-align: justify; }\\n\\nul {\\n  margin: 0.5em 0;\\n  padding-left: 1.5em; }\\n\\nli {\\n  margin: 0.2em 0; }\\n  li .md {\\n    vertical-align: middle; }\\n\\nh1,\\nh2 {\\n  margin-bottom: 0;\\n  line-height: 1.5; }\\n\\nh2 {\\n  margin-top: 1.5em;\\n  font-size: 20px; }\\n  @media (min-width: 1000px) {\\n    h2 {\\n      font-size: 28px; } }\\n\\nsmall {\\n  font-size: 0.8em; }\\n\\n.cursor {\\n  animation: blink 1s step-start 0s infinite; }\\n\\n@keyframes blink {\\n  50% {\\n    opacity: 0; } }\\n\\n.back-link {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  z-index: 1;\\n  padding: 0.5em;\\n  line-height: 1; }\\n  .back-link a {\\n    display: block;\\n    text-decoration: none;\\n    color: #251d35;\\n    padding: 0.5em; }\\n    .back-link a:hover, .back-link a:focus {\\n      text-decoration: underline;\\n      color: #251d35; }\\n  @media (max-width: 900px) {\\n    .back-link {\\n      display: none; } }\\n\\n/*\\r\\n\\tFORM\\r\\n*/\\nbutton,\\ninput[type=\\\"text\\\"],\\ninput[type=\\\"number\\\"],\\ninput[type=\\\"color\\\"],\\ntextarea,\\nselect {\\n  font-family: \\\"Mukta\\\", sans-serif;\\n  font-size: 16px;\\n  line-height: 1.75;\\n  background: #eee4e4;\\n  border: 1px solid #898989;\\n  padding: 5px 15px; }\\n  @media (min-width: 1000px) {\\n    button,\\n    input[type=\\\"text\\\"],\\n    input[type=\\\"number\\\"],\\n    input[type=\\\"color\\\"],\\n    textarea,\\n    select {\\n      font-size: 22px; } }\\n  button:focus,\\n  input[type=\\\"text\\\"]:focus,\\n  input[type=\\\"number\\\"]:focus,\\n  input[type=\\\"color\\\"]:focus,\\n  textarea:focus,\\n  select:focus {\\n    outline: none;\\n    border: 1px solid black; }\\n\\nlabel {\\n  cursor: pointer; }\\n\\ninput[type=\\\"text\\\"] {\\n  margin-top: 10px;\\n  width: 100%; }\\n\\ninput[type=\\\"radio\\\"],\\ninput[type=\\\"checkbox\\\"] {\\n  filter: saturate(0) brightness(0.9); }\\n\\ntextarea {\\n  width: 100%;\\n  margin: 10px 0;\\n  min-height: 250px; }\\n\\nbutton {\\n  margin: 20px 0;\\n  cursor: pointer; }\\n  button:hover, button:focus {\\n    filter: brightness(0.95); }\\n\\n/*\\r\\n\\tDARK SCHEME\\r\\n*/\\n@media (prefers-color-scheme: dark) {\\n  body {\\n    background: #0c0b0e; }\\n  * {\\n    color: #bebcc3; }\\n  a,\\n  a small, a:visited,\\n  a:visited small {\\n    color: #6c89b7; }\\n  a:hover,\\n  a:hover small, a:focus,\\n  a:focus small {\\n    color: #3b609c; }\\n  .back-link a {\\n    color: #bebcc3; }\\n    .back-link a:hover, .back-link a:focus {\\n      color: #bebcc3; }\\n  /*\\r\\n\\tFORM\\r\\n*/\\n  button,\\n  input[type=\\\"text\\\"],\\n  input[type=\\\"number\\\"],\\n  input[type=\\\"color\\\"],\\n  textarea,\\n  select {\\n    color: #bebcc3;\\n    background: #2a2a2c;\\n    border-color: #2a2a2c; }\\n    button:focus,\\n    input[type=\\\"text\\\"]:focus,\\n    input[type=\\\"number\\\"]:focus,\\n    input[type=\\\"color\\\"]:focus,\\n    textarea:focus,\\n    select:focus {\\n      border-color: #f4ecec; }\\n  input[type=\\\"radio\\\"],\\n  input[type=\\\"checkbox\\\"] {\\n    filter: invert(1) saturate(0); }\\n  button:hover, button:focus {\\n    filter: brightness(0.8); } }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n\n\n//# sourceURL=webpack:///./css/main.scss?./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}\n\n//# sourceURL=webpack:///./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce =  true ? __webpack_require__.nc : undefined;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && typeof btoa !== 'undefined') {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ })

/******/ });